// Generated by CoffeeScript 1.6.3
(function() {
  var Manager, eventEmitter, events, project, serialPort,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  project = require('./project').project;

  events = require('events');

  eventEmitter = new events.EventEmitter();

  serialPort = require('serialport').SerialPort;

  Manager = (function() {
    Manager.prototype.projects = [];

    Manager.prototype.indexes = {};

    function Manager(sp) {
      this.getSerialStatus = __bind(this.getSerialStatus, this);
      this.getStatus = __bind(this.getStatus, this);
      this.addProject = __bind(this.addProject, this);
      this.serialComm = sp;
    }

    Manager.prototype.addProject = function(pr) {
      pr = new project(pr);
      this.indexes[pr.getName()](this.projects.length);
      this.projects.push(pr);
      return {
        length: this.projects.length,
        project: pr
      };
    };

    Manager.prototype.getStatus = function() {
      var statuses,
        _this = this;
      statuses = {};
      this.projects.forEach(function(project) {
        console.log("project: ", project.getName(), project.getStatus());
        return _this.statuses[project.getName()] = project.getStatus();
      });
      return statuses;
    };

    Manager.prototype.getSerialStatus = function() {
      var retString, retValues, statuses;
      statuses = this.getStatus;
      retString = "";
      return retValues = new Array(statuses.length);
    };

    return Manager;

  })();

  module.exports = Manager;

}).call(this);
